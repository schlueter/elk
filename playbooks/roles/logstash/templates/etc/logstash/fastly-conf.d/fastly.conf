# {{ ansible_managed }}
#
input {
    heartbeat {
        interval => 300
        type => "heartbeat"
        message => "epoch"
    }
}
input {
  tcp {
    type => "fastly"
    port => 5045
    ssl_enable => true
    ssl_cert => "{{ logstash_ssl_cert }}"
    ssl_key => "{{ logstash_ssl_key }}"
    ssl_verify => false
    codec => plain { charset => "ISO-8859-1" }
  }
}

filter {
  if [type] == "fastly" {
    grok {
      match => [
        "message", "%{SYSLOG5424PRI}%{TIMESTAMP_ISO8601:syslog_timestamp} %{SYSLOGHOST:syslog_host} %{IPORHOST}(?:\[%{POSINT:syslog_pid}\])?: %{IPORHOST:client_ip} %{URIPROTO:http_proto}/%{NUMBER:http_ver} %{IPORHOST:vhost} %{WORD:method} %{QS:request_path} %{INT:status} %{NUMBER:filesize:float} %{NUMBER:request_time:float} %{QS:http_user_agent} %{QS:http_referer} %{WORD:cache_status} %{QS:cache_action} %{WORD:fastly_datacenter} %{QS:fastly_zone} %{WORD:fastly_area_code} %{QS:fastly_city_name} %{WORD:fastly_continent_code} %{WORD:fastly_country_code} %{WORD:fastly_country_code3} %{QS:fastly_country_name} %{QS:fastly_postal_code} %{QS:fastly_region} %{INT:fastly_metro_code} %{NUMBER:fastly_longitude:float} %{NUMBER:fastly_latitude:float} %{QS:fastly_device}"
      ]
    }
    date {
      match => [ "syslog_timestamp", "ISO8601" ]
    }
    mutate {
      add_field => [ "[geoip][location]", "%{fastly_longitude}" ]
      add_field => [ "[geoip][location]", "%{fastly_latitude}" ]
      convert   => [ "[geoip][coordinates]", "float" ]
    }
    useragent {
      source => "http_user_agent"
    }
  }
  if [type] == "heartbeat" {
    mutate {
      remove_tag => [ "_grokparsefailure" ]
    }
  }
  if "_grokparsefailure" in [tags] {
    drop { }
  }
}

output {
    elasticsearch {
{% if inventory_hostname in groups.elastic|default([]) %}
      hosts => ["localhost:9200"]
{% else %}
      hosts => ["{{ logstash_elastichost }}"]
{% endif %}
      index => "logstash-fastly-%{+YYYY.MM.dd}"
    }
}
