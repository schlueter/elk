# {{ ansible_managed }}
input {
    heartbeat {
        interval => 300
        type => "heartbeat"
        message => "epoch"
    }
}
input {
  beats {
    port => 5047
    type => "logs"
    ssl => true
    ssl_certificate => "{{ logstash_ssl_cert }}"
    ssl_key => "{{ logstash_ssl_key }}"
  }
}
filter {
  if [type] =~ "nginx" {
    grok {
      match => [
           "message", "%{DATA:x_forwarded_for} - %{USERNAME:remote_user} \[%{TIMESTAMP_ISO8601:date}\] \"%{WORD:method} %{DATA:request}\" %{INT:status} %{INT:body_bytes_sent} %{QS:http_referer} %{QS:http_user_agent} %{NUMBER:request_time:float} %{NUMBER:upstream_time:float} %{IPORHOST:vhost}",
           "message", "%{DATA:x_forwarded_for} - %{USERNAME:remote_user} \[%{TIMESTAMP_ISO8601:date}\] \"%{WORD:method} %{DATA:request}\" %{INT:status} %{INT:body_bytes_sent} %{QS:http_referer} %{QS:http_user_agent} %{NUMBER:request_time:float} - %{IPORHOST:vhost}",
           "message", "%{DATA:x_forwarded_for} - %{USERNAME:remote_user} \[%{TIMESTAMP_ISO8601:date}\] \"%{WORD:method} %{DATA:request}\" %{INT:status} %{INT:body_bytes_sent} %{QS:http_referer} %{QS:http_user_agent} %{NUMBER:request_time:float} %{IPORHOST:vhost}"
      ]
    }
    date {
      locale => "en"
      match => [ "date" , "ISO8601" ]
    }
    mutate {
      rename => { "type" => "nginx_logfile" }
      add_field => { "type" => "nginx-access" }
    }
    if (", " in [x_forwarded_for]) {
      split {
        field => "x_forwarded_for"
        terminator => ', '
      }
      geoip {
        source => "x_forwarded_for"
      }
    useragent {
      source => "http_user_agent"
    }
    }
  }
}
output {
    elasticsearch {
{% if inventory_hostname in groups.elastic|default([]) %}
      hosts => ["localhost:9200"]
{% else %}
      hosts => ["{{ logstash_elastichost }}"]
{% endif %}
      index => "logstash-%{+YYYY.MM.dd}"
    }
}
